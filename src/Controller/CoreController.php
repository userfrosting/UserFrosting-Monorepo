<?php

/*
 * UserFrosting (http://www.userfrosting.com)
 *
 * @link      https://github.com/userfrosting/UserFrosting
 * @copyright Copyright (c) 2019 Alexander Weissman
 * @license   https://github.com/userfrosting/UserFrosting/blob/master/LICENSE.md (MIT License)
 */

namespace UserFrosting\Sprinkle\Core\Controller;

use Psr\Http\Message\ResponseInterface as Response;
use UserFrosting\Support\Exception\NotFoundException;

/**
 * CoreController Class.
 *
 * Implements some common sitewide routes.
 */
class CoreController
{
    /**
     * Render the alert stream as a JSON object.
     * The alert stream contains messages which have been generated by calls to `MessageStream::addMessage` and `MessageStream::addMessageTranslated`.
     * Request type: GET.
     *
     * @param Response $response
     */
    public function jsonAlerts(Response $response): Response
    {
        $alerts = $this->ci->alerts->getAndClearMessages(); // TODO : Inject class
        $response->getBody()->write(json_encode($alerts));

        return $response;
    }

    /**
     * Handle all requests for raw assets.
     * Request type: GET.
     *
     * @param Response $response
     * @param array    $args
     */
    public function getAsset(Response $response, array $args): Response
    {
        /** @var \UserFrosting\Assets\AssetLoader $assetLoader */
        $assetLoader = $this->ci->assetLoader;

        if (!isset($args['url']) || !$assetLoader->loadAsset($args['url'])) {
            throw new NotFoundException();
        }

        $response
            ->withHeader('Content-Type', $assetLoader->getType())
            ->withHeader('Content-Length', $assetLoader->getLength())
            ->getBody()->write($assetLoader->getContent());

        return $response;
    }
}
